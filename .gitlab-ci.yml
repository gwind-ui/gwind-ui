# #########################################################################################################################
# ###################################################### NEW-PIPELINE #####################################################
# #########################################################################################################################

image: artifactory.pegadaian.co.id:8084/node:20.10.0-alpine

variables:
    DOCKER_AUTH_CONFIG: '{"auths": {"artifactory.pegadaian.co.id:5443": {"auth": "$DOCKER_AU_CONFIG"},"artifactory.pegadaian.co.id:8084": {"auth": "$DOCKER_AU_CONFIG"}}}'
    DANGER_GITLAB_API_TOKEN: $GITLAB_API_TOKEN
    DANGER_GITLAB_HOST: https://repo.pegadaian.co.id
    DANGER_GITLAB_API_BASE_URL: https://repo.pegadaian.co.id/api/v4
    REGISTRY: artifactory.pegadaian.co.id:8084
    NPM_URL: https://artifactory.pegadaian.co.id/repository/npm-hosted-01/

stages:
    - danger
    - install
    - build
    - deploy
    - snapshot

before_script:
    - npm install -g pnpm

cache:
    paths:
        - node_modules/
        - .pnpm-store/
        - reports/

danger_review:
    stage: danger
    before_script:
        - npm install -g pnpm
        - pnpm config set @pegadaian:registry https://artifactory.pegadaian.co.id/repository/npm-hosted-01/
        - pnpm install
    script:
        - pnpm danger:lint-report
        - pnpm danger:ci --failOnErrors
    rules:
        -   if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
        -   when: never
        -   if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feature\/.*\/v.*/'
            when: always
    artifacts:
        paths:
            - reports/lint-results.xml
        when: always
        expire_in: 1 hour

install dependencies:
    stage: install
    script:
        - npm install -g pnpm
        - pnpm config set @pegadaian:registry https://artifactory.pegadaian.co.id/repository/npm-hosted-01/
        - pnpm install
    artifacts:
        paths:
            - node_modules/
        expire_in: 1h
    only:
        - master
        - tags
        - /^dev/component$/

build package:
    stage: build
    script:
        - pnpm run build:lib
    artifacts:
        name: "$CI_COMMIT_REF_SLUG"
        paths:
            - lib/
        expire_in: 1h
    only:
        - master
        - tags
        - /^dev/component$/
    needs:
        - install dependencies

deploy:
    image: $REGISTRY/node:20.10.0-alpine
    stage: deploy
    script:
        - echo "registry=$NPM_REGISTRY_URL" > .npmrc
        - echo "//artifactory.pegadaian.co.id/repository/npm-hosted-01/:_auth=$NPM_AUTH_TOKEN" >> .npmrc
        - npm publish --userconfig .npmrc
    only:
        - master
        - tags

snapshot:
    image: $REGISTRY/node:20.10.0-alpine
    stage: snapshot
    script:
        - echo "registry=$NPM_REGISTRY_URL" > .npmrc
        - echo "//artifactory.pegadaian.co.id/repository/npm-hosted-01/:_auth=$NPM_AUTH_TOKEN" >> .npmrc
        - npm publish --userconfig .npmrc
    only:
        - /^dev/component$/
