"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const gwindThemeColors = {
    broccoli: {
        900: "hsl(var(--broccoli-900)  / <alpha-value>)",
        800: "hsl(var(--broccoli-800)  / <alpha-value>)",
        600: "hsl(var(--broccoli-600)  / <alpha-value>)",
        500: "hsl(var(--broccoli-500)  / <alpha-value>)",
        400: "hsl(var(--broccoli-400)  / <alpha-value>)",
        200: "hsl(var(--broccoli-200)  / <alpha-value>)",
        100: "hsl(var(--broccoli-100)  / <alpha-value>)"
    },
    lime: {
        900: "hsl(var(--lime-900)  / <alpha-value>)",
        800: "hsl(var(--lime-800)  / <alpha-value>)",
        600: "hsl(var(--lime-600)  / <alpha-value>)",
        500: "hsl(var(--lime-500)  / <alpha-value>)",
        400: "hsl(var(--lime-400)  / <alpha-value>)",
        200: "hsl(var(--lime-200)  / <alpha-value>)",
        100: "hsl(var(--lime-100)  / <alpha-value>)"
    },
    pear: {
        900: "hsl(var(--pear-900)  / <alpha-value>)",
        800: "hsl(var(--pear-800)  / <alpha-value>)",
        600: "hsl(var(--pear-600)  / <alpha-value>)",
        500: "hsl(var(--pear-500)  / <alpha-value>)",
        400: "hsl(var(--pear-400)  / <alpha-value>)",
        200: "hsl(var(--pear-200)  / <alpha-value>)",
        100: "hsl(var(--pear-100)  / <alpha-value>)"
    },
    kiwi: {
        900: "hsl(var(--kiwi-900)  / <alpha-value>)",
        800: "hsl(var(--kiwi-800)  / <alpha-value>)",
        600: "hsl(var(--kiwi-600)  / <alpha-value>)",
        500: "hsl(var(--kiwi-500)  / <alpha-value>)",
        400: "hsl(var(--kiwi-400)  / <alpha-value>)",
        200: "hsl(var(--kiwi-200)  / <alpha-value>)",
        100: "hsl(var(--kiwi-100)  / <alpha-value>)"
    },
    red: {
        900: "hsl(var(--red-900)  / <alpha-value>)",
        800: "hsl(var(--red-800)  / <alpha-value>)",
        600: "hsl(var(--red-600)  / <alpha-value>)",
        500: "hsl(var(--red-500)  / <alpha-value>)",
        400: "hsl(var(--red-400)  / <alpha-value>)",
        200: "hsl(var(--red-200)  / <alpha-value>)",
        100: "hsl(var(--red-100)  / <alpha-value>)"
    },
    orange: {
        900: "hsl(var(--orange-900)  / <alpha-value>)",
        800: "hsl(var(--orange-800)  / <alpha-value>)",
        600: "hsl(var(--orange-600)  / <alpha-value>)",
        500: "hsl(var(--orange-500)  / <alpha-value>)",
        400: "hsl(var(--orange-400)  / <alpha-value>)",
        200: "hsl(var(--orange-200)  / <alpha-value>)",
        100: "hsl(var(--orange-100)  / <alpha-value>)"
    },
    yellow: {
        900: "hsl(var(--yellow-900)  / <alpha-value>)",
        800: "hsl(var(--yellow-800)  / <alpha-value>)",
        600: "hsl(var(--yellow-600)  / <alpha-value>)",
        500: "hsl(var(--yellow-500)  / <alpha-value>)",
        400: "hsl(var(--yellow-400)  / <alpha-value>)",
        200: "hsl(var(--yellow-200)  / <alpha-value>)",
        100: "hsl(var(--yellow-100)  / <alpha-value>)"
    },
    gold: {
        900: "hsl(var(--gold-900)  / <alpha-value>)",
        800: "hsl(var(--gold-800)  / <alpha-value>)",
        600: "hsl(var(--gold-600)  / <alpha-value>)",
        500: "hsl(var(--gold-500)  / <alpha-value>)",
        400: "hsl(var(--gold-400)  / <alpha-value>)",
        200: "hsl(var(--gold-200)  / <alpha-value>)",
        100: "hsl(var(--gold-100)  / <alpha-value>)"
    },
    turquoise: {
        900: "hsl(var(--turquoise-900)  / <alpha-value>)",
        800: "hsl(var(--turquoise-800)  / <alpha-value>)",
        600: "hsl(var(--turquoise-600)  / <alpha-value>)",
        500: "hsl(var(--turquoise-500)  / <alpha-value>)",
        400: "hsl(var(--turquoise-400)  / <alpha-value>)",
        200: "hsl(var(--turquoise-200)  / <alpha-value>)",
        100: "hsl(var(--turquoise-100)  / <alpha-value>)"
    },
    blue: {
        900: "hsl(var(--blue-900)  / <alpha-value>)",
        800: "hsl(var(--blue-800)  / <alpha-value>)",
        600: "hsl(var(--blue-600)  / <alpha-value>)",
        500: "hsl(var(--blue-500)  / <alpha-value>)",
        400: "hsl(var(--blue-400)  / <alpha-value>)",
        200: "hsl(var(--blue-200)  / <alpha-value>)",
        100: "hsl(var(--blue-100)  / <alpha-value>)"
    },
    purple: {
        900: "hsl(var(--purple-900)  / <alpha-value>)",
        800: "hsl(var(--purple-800)  / <alpha-value>)",
        600: "hsl(var(--purple-600)  / <alpha-value>)",
        500: "hsl(var(--purple-500)  / <alpha-value>)",
        400: "hsl(var(--purple-400)  / <alpha-value>)",
        200: "hsl(var(--purple-200)  / <alpha-value>)",
        100: "hsl(var(--purple-100)  / <alpha-value>)"
    },
    black: {
        800: "hsl(var(--black-800)  / <alpha-value>)",
        600: "hsl(var(--black-600)  / <alpha-value>)",
        500: "hsl(var(--black-500)  / <alpha-value>)",
        400: "hsl(var(--black-400)  / <alpha-value>)",
        200: "hsl(var(--black-200)  / <alpha-value>)",
        100: "hsl(var(--black-100)  / <alpha-value>)"
    },
    white: "hsl(var(--text-white)  / <alpha-value>)"
};
exports.default = gwindThemeColors;
