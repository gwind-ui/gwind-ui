import {
  defineComponent,
  h,
  ref,
  watch
} from "./chunk-S4SAQHCQ.js";

// node_modules/.pnpm/@pegadaian+gwind-ic@0.0.11_typescript@5.7.3/node_modules/@pegadaian/gwind-ic/src/components/GIcon.ts
var GIcon = defineComponent({
  name: "GIcon",
  props: {
    icon: {
      type: Array,
      default: [],
      required: true
    },
    color: {
      type: String,
      default: void 0,
      required: false
    },
    weight: {
      type: String,
      default: "outline",
      validator: (value) => {
        return [
          "outline",
          "fill"
        ].includes(value);
      }
    },
    size: {
      type: String,
      default: void 0,
      required: false,
      validator: (value) => {
        return [
          "sm",
          "lg",
          "md"
        ].includes(value);
      }
    }
  },
  setup(props, { attrs }) {
    const _icon = ref(props.icon);
    watch(
      () => props.icon,
      () => {
        _icon.value = props.icon;
      }
    );
    const getIconFinal = (() => {
      return props.weight === "fill" ? _icon.value[2] : _icon.value[3];
    })();
    const getViewBox = (() => {
      return _icon.value[1];
    })();
    const getClassName = (() => {
      return [attrs.class, props.size && `g-icon-${props.size}`, props.color && props.color];
    })();
    return () => getIconFinal === "undefined" ? console.error(props.icon[0] + " " + props.weight + " is not available") : h("svg", {
      ...attrs,
      xmlns: "http://www.w3.org/2000/svg",
      fill: "currentColor",
      class: getClassName,
      viewBox: `${attrs.viewBox ? attrs.viewBox : `0 0 ${getViewBox}`}`,
      innerHTML: getIconFinal,
      // Menggunakan innerHTML untuk memasukkan konten SVG
      role: "img"
    });
  }
});
var GIcon_default = GIcon;

export {
  GIcon_default
};
//# sourceMappingURL=chunk-X5KAQ26R.js.map
