{
  "version": 3,
  "sources": ["../../../../../.pnpm/@pegadaian+gwind-ic@0.0.11_typescript@5.7.3/node_modules/@pegadaian/gwind-ic/src/components/GIcon.ts"],
  "sourcesContent": ["import { defineComponent, h, ref, watch } from \"vue\";\n\nconst GIcon = defineComponent({\n  name: \"GIcon\",\n  props: {\n    icon: {\n      type: Array,\n      default: [],\n      required: true,\n    },\n    color: {\n      type : String,\n      default: undefined,\n      required: false\n    },\n    weight: {\n        type : String,\n        default: \"outline\",\n        validator: (value:string) => {\n            return [\n                \"outline\",\n                \"fill\"\n            ].includes(value);\n        },\n    },\n    size: {\n      type: String,\n      default: undefined,\n      required: false,\n      validator: (value: string) => {\n        return [\n          \"sm\",\n          \"lg\",\n          \"md\",\n        ].includes(value);\n      },\n    },\n  },\n  setup(props, { attrs }) {\n\n    const _icon = ref(props.icon)\n\n    watch(\n        () => props.icon,\n        () => {\n          _icon.value = props.icon\n        },\n      )\n\n    const getIconFinal = (() =>{\n       return props.weight === \"fill\" ? _icon.value[2] : _icon.value[3]\n    })()\n\n    const getViewBox = (() => {\n        return _icon.value[1]\n    })()\n\n\n    const getClassName = (() => {\n      return [attrs.class, props.size && `g-icon-${props.size}`, props.color && props.color]\n    })()\n\n    return () => \n      getIconFinal === \"undefined\" ?\n        console.error(props.icon[0]+\" \" + props.weight + \" is not available\")\n      :\n        h(\"svg\", {\n          ...attrs,\n          xmlns: \"http://www.w3.org/2000/svg\",  \n          fill: \"currentColor\",\n          class: getClassName,\n          viewBox: `${attrs.viewBox? attrs.viewBox : `0 0 ${getViewBox}`}`,\n          innerHTML: getIconFinal, // Menggunakan innerHTML untuk memasukkan konten SVG\n          role: \"img\",\n        });\n    \n  },\n});\n\nexport default GIcon ;\n"],
  "mappings": ";;;;;;;;AAEA,IAAM,QAAQ,gBAAgB;AAAA,EAC5B,MAAM;AAAA,EACN,OAAO;AAAA,IACL,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC;AAAA,MACV,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAO;AAAA,MACP,SAAS;AAAA,MACT,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACJ,MAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW,CAAC,UAAiB;AACzB,eAAO;AAAA,UACH;AAAA,UACA;AAAA,QACJ,EAAE,SAAS,KAAK;AAAA,MACpB;AAAA,IACJ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,UAAU;AAAA,MACV,WAAW,CAAC,UAAkB;AAC5B,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,QACF,EAAE,SAAS,KAAK;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AAAA,EACA,MAAM,OAAO,EAAE,MAAM,GAAG;AAEtB,UAAM,QAAQ,IAAI,MAAM,IAAI;AAE5B;AAAA,MACI,MAAM,MAAM;AAAA,MACZ,MAAM;AACJ,cAAM,QAAQ,MAAM;AAAA,MACtB;AAAA,IACF;AAEF,UAAM,gBAAgB,MAAK;AACxB,aAAO,MAAM,WAAW,SAAS,MAAM,MAAM,CAAC,IAAI,MAAM,MAAM,CAAC;AAAA,IAClE,GAAG;AAEH,UAAM,cAAc,MAAM;AACtB,aAAO,MAAM,MAAM,CAAC;AAAA,IACxB,GAAG;AAGH,UAAM,gBAAgB,MAAM;AAC1B,aAAO,CAAC,MAAM,OAAO,MAAM,QAAQ,UAAU,MAAM,IAAI,IAAI,MAAM,SAAS,MAAM,KAAK;AAAA,IACvF,GAAG;AAEH,WAAO,MACL,iBAAiB,cACf,QAAQ,MAAM,MAAM,KAAK,CAAC,IAAE,MAAM,MAAM,SAAS,mBAAmB,IAEpE,EAAE,OAAO;AAAA,MACP,GAAG;AAAA,MACH,OAAO;AAAA,MACP,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS,GAAG,MAAM,UAAS,MAAM,UAAU,OAAO,UAAU,EAAE;AAAA,MAC9D,WAAW;AAAA;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EAEP;AACF,CAAC;AAED,IAAO,gBAAQ;",
  "names": []
}
